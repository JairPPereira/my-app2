{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\my-app2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport \"primereact/resources/themes/arya-blue/theme.css\"; //theme\n\nimport \"primereact/resources/primereact.min.css\"; //core css\n\nimport \"primeicons/primeicons.css\";\nimport { useRef, useState } from 'react'; //icons\n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [text, setText] = useState(' ');\n  const toastRef = useRef();\n\n  const onButtonClick = () => {\n    if (text) toastRef.current.show({\n      severity: 'info',\n      summary: 'Sucess',\n      detail: text\n    });else toastRef.current.show({\n      severity: 'error',\n      summary: 'error',\n      detail: 'Value is required'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toastRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"p-float-label\",\n        children: [/*#__PURE__*/_jsxDEV(InputText, {\n          id: \"input_text\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"input_text\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        label: \"Submit\",\n        icon: \"pi pi-check\",\n        onClick: onButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"WNbhTPkfZ8KbBPqVMMsKpdCFVos=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["InputText","Button","Toast","useRef","useState","App","text","setText","toastRef","onButtonClick","current","show","severity","summary","detail","e","target","value"],"sources":["D:/react/my-app2/src/App.js"],"sourcesContent":["import {InputText, } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\n \n \n\nimport \"primereact/resources/themes/arya-blue/theme.css\";  //theme\nimport \"primereact/resources/primereact.min.css\";                  //core css\nimport \"primeicons/primeicons.css\";  \nimport { useRef, useState } from 'react';                            //icons\n \n\n\n\n\n\n\n\n\n\nimport './App.css';\n\n\nfunction App() {\n\n  const [text, setText] = useState(' ');\n  const toastRef = useRef ( );\n  const onButtonClick = () => {\n    if (text) \n      toastRef.current.show({severity: 'info', summary: 'Sucess', detail: text });\n       else\n       toastRef.current.show({severity: 'error', summary: 'error', detail: 'Value is required'\n    });\n  };\n\n\n  return (\n\n  <div className='App'>\n    <Toast ref={toastRef} />\n    <header className='App-header'>\n      <span className=\"p-float-label\">\n        <InputText id=\"input_text\" value={text} onChange={e=>setText(e.target.value)}/>\n        <label htmlFor='input_text'>Name</label>\n      </span>\n      <InputText value={text} onChange = {e => setText(e.target.value)}/>\n      <br/>\n     <Button type = \"button\" label= \"Submit\"  icon=\"pi pi-check\" onClick={onButtonClick}></Button>\n    </header>\n  </div>\n  );\n}\n\n\n\n\n\n\nexport default App"],"mappings":";;;AAAA,SAAQA,SAAR,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAIA,OAAO,iDAAP,C,CAA2D;;AAC3D,OAAO,yCAAP,C,CAAmE;;AACnE,OAAO,2BAAP;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC,C,CAAqE;;AAWrE,OAAO,WAAP;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,GAAD,CAAhC;EACA,MAAMI,QAAQ,GAAGL,MAAM,EAAvB;;EACA,MAAMM,aAAa,GAAG,MAAM;IAC1B,IAAIH,IAAJ,EACEE,QAAQ,CAACE,OAAT,CAAiBC,IAAjB,CAAsB;MAACC,QAAQ,EAAE,MAAX;MAAmBC,OAAO,EAAE,QAA5B;MAAsCC,MAAM,EAAER;IAA9C,CAAtB,EADF,KAGGE,QAAQ,CAACE,OAAT,CAAiBC,IAAjB,CAAsB;MAACC,QAAQ,EAAE,OAAX;MAAoBC,OAAO,EAAE,OAA7B;MAAsCC,MAAM,EAAE;IAA9C,CAAtB;EAEJ,CAND;;EASA,oBAEA;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,KAAD;MAAO,GAAG,EAAEN;IAAZ;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,SAAS,EAAC,YAAlB;MAAA,wBACE;QAAM,SAAS,EAAC,eAAhB;QAAA,wBACE,QAAC,SAAD;UAAW,EAAE,EAAC,YAAd;UAA2B,KAAK,EAAEF,IAAlC;UAAwC,QAAQ,EAAES,CAAC,IAAER,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;QAA5D;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,OAAO,EAAC,YAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,SAAD;QAAW,KAAK,EAAEX,IAAlB;QAAwB,QAAQ,EAAIS,CAAC,IAAIR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;MAAhD;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAA;QAAA;QAAA;MAAA,QANF,eAOC,QAAC,MAAD;QAAQ,IAAI,EAAG,QAAf;QAAwB,KAAK,EAAE,QAA/B;QAAyC,IAAI,EAAC,aAA9C;QAA4D,OAAO,EAAER;MAArE;QAAA;QAAA;QAAA;MAAA,QAPD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QAFA;AAeD;;GA5BQJ,G;;KAAAA,G;AAmCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}